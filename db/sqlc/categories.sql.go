// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: categories.sql

package sqlc

import (
	"context"
)

const listCategoriesByUser = `-- name: ListCategoriesByUser :many
SELECT id, name, color
FROM categories
WHERE clerk_user_id = $1
AND deleted_at IS NULL
`

type ListCategoriesByUserRow struct {
	ID    int32
	Name  string
	Color string
}

func (q *Queries) ListCategoriesByUser(ctx context.Context, clerkUserID string) ([]ListCategoriesByUserRow, error) {
	rows, err := q.db.Query(ctx, listCategoriesByUser, clerkUserID)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []ListCategoriesByUserRow
	for rows.Next() {
		var i ListCategoriesByUserRow
		if err := rows.Scan(&i.ID, &i.Name, &i.Color); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
